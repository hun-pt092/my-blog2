import dotenv from 'dotenv';
import { createServer } from 'node:http';
import { Server } from 'socket.io';
import db from './src/lib/db.js';

// Load environment variables
dotenv.config();

const PORT = process.env.PORT || 3000;
const WS_PORT = process.env.WS_PORT || 3001;
const NODE_ID = process.env.NODE_ID || '1';

console.log(`[Node ${NODE_ID}] Starting server...`);

// Import handler từ build output của SvelteKit
const startServer = async () => {
  try {
    // Dynamic import để đợi file handler.js được tạo ra sau khi build
    const { handler } = await import('./build/handler.js').catch(err => {
      console.error(`[Node ${NODE_ID}] Error importing handler:`, err);
      // Thử lại với cấu trúc khác (adapter-node có thể tạo ra các file khác nhau tùy phiên bản)
      return import('./build/index.js');
    });
    
    // Tạo HTTP server cho SvelteKit
    const app = createServer(handler);
    
    // Lắng nghe kết nối HTTP
    app.listen(PORT, () => {
      console.log(`[Node ${NODE_ID}] SvelteKit server chạy ở cổng ${PORT}`);
    });
    
    // Khởi tạo WebSocket server
    const io = new Server(WS_PORT, {
      cors: {
        origin: '*',
        methods: ['GET', 'POST']
      }
    });

    console.log(`[Node ${NODE_ID}] WebSocket server chạy ở cổng ${WS_PORT}`);
    
    // Thiết lập WebSocket trực tiếp
    // Theo dõi người dùng đang kết nối
    const connectedUsers = new Map();

    io.on('connection', (socket) => {
      console.log(`[Node ${NODE_ID}] Client kết nối: ${socket.id}`);

      // Xử lý khi client theo dõi bài viết
      socket.on('join_post', (postSlug) => {
        socket.join(`post:${postSlug}`);
        console.log(`[Node ${NODE_ID}] Client ${socket.id} theo dõi bài viết: ${postSlug}`);
      });

      // Xử lý khi client rời khỏi bài viết
      socket.on('leave_post', (postSlug) => {
        socket.leave(`post:${postSlug}`);
        console.log(`[Node ${NODE_ID}] Client ${socket.id} rời khỏi bài viết: ${postSlug}`);
      });
      
      // Xử lý khi client gửi comment mới
      socket.on('new_comment', (data) => {
        console.log(`[Node ${NODE_ID}] Comment mới:`, data);
        io.to(`post:${data.postSlug}`).emit('comment_added', {
          id: Date.now().toString(),
          author: data.author,
          content: data.content,
          created_at: new Date().toISOString()
        });
      });
      
      // Xử lý khi client ngắt kết nối
      socket.on('disconnect', () => {
        console.log(`[Node ${NODE_ID}] Client ngắt kết nối: ${socket.id}`);
        connectedUsers.delete(socket.id);
      });
    });
    
  } catch (err) {
    console.error(`[Node ${NODE_ID}] Error starting server:`, err);
    throw err;
  }
};

// Bắt đầu server
startServer().catch(err => {
  console.error(`[Node ${NODE_ID}] Failed to import SvelteKit handler:`, err);
});