upstream backend_servers {
    server blog-backend1:3000;
    server blog-backend2:3000;
    ip_hash;  # Đảm bảo người dùng luôn được route đến cùng một server
}

upstream websocket_servers {
    server blog-backend1:3001;
    server blog-backend2:3001;
    ip_hash;  # Đảm bảo kết nối websocket luôn đến cùng server
}

server {
    listen 80;
    server_name localhost;
    
    location / {
        proxy_pass http://backend_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_cache off;
    }
    
    # Route WebSocket to port 3001
    location /socket.io/ {
        proxy_pass http://websocket_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    # Handle static files
    location /static/ {
        proxy_pass http://backend_servers;
        proxy_cache_valid 200 1d;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # Health check for load balancer
    location /health {
        return 200 'OK';
        add_header Content-Type text/plain;
    }
}
